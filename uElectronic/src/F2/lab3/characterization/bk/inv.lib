library (inv) {
  /* Models written by Liberate 15.1.0.503 from Cadence Design Systems, Inc. on Seg Nov 28 18:09:31 BRST 2016 */
  comment : "";
  date : "$Date: Mon Nov 28 18:09:13 2016 $";
  revision : "1.0";
  delay_model : table_lookup;
  capacitive_load_unit (1,pf);
  current_unit : "1mA";
  leakage_power_unit : "1nW";
  pulling_resistance_unit : "1kohm";
  time_unit : "1ns";
  voltage_unit : "1V";
  voltage_map (vdd!, 1);
  voltage_map (gnd!, 0);
  voltage_map (VDD, 1);
  voltage_map (VSS, 0);
  voltage_map (GND, 0);
  default_cell_leakage_power : 0;
  default_fanout_load : 1;
  default_max_transition : 3;
  default_output_pin_cap : 0;
  in_place_swap_mode : match_footprint;
  input_threshold_pct_fall : 50;
  input_threshold_pct_rise : 50;
  nom_process : 1;
  nom_temperature : 25;
  nom_voltage : 1;
  output_threshold_pct_fall : 50;
  output_threshold_pct_rise : 50;
  slew_derate_from_library : 1;
  slew_lower_threshold_pct_fall : 20;
  slew_lower_threshold_pct_rise : 20;
  slew_upper_threshold_pct_fall : 80;
  slew_upper_threshold_pct_rise : 80;
  operating_conditions (PVT_1V_25C) {
    process : 1;
    temperature : 25;
    voltage : 1;
  }
  default_operating_conditions : PVT_1V_25C;
  lu_table_template (constraint_4x5) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("0.003, 0.08, 0.16, 0.31");
    index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
  }
  lu_table_template (delay_4x5) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.003, 0.08, 0.16, 0.31");
    index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
  }
  lu_table_template (mpw_constraint_4x5) {
    variable_1 : constrained_pin_transition;
    index_1 ("0.003, 0.08, 0.16, 0.31");
  }
  power_lut_template (passive_power_4x1) {
    variable_1 : input_transition_time;
    index_1 ("0.003, 0.08, 0.16, 0.31");
  }
  power_lut_template (power_4x5) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.003, 0.08, 0.16, 0.31");
    index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
  }
  cell (Complex_f2) {
    area : 0;
    cell_leakage_power : 20.1767;
    pg_pin (gnd!) {
      pg_type : primary_ground;
      voltage_name : "gnd!";
    }
    pg_pin (vdd!) {
      pg_type : primary_power;
      voltage_name : "vdd!";
    }
    leakage_power () {
      value : 0;
      when : "(A * B * C * D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 22.0839;
      when : "(A * B * C * D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * B * C * !D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 23.1191;
      when : "(A * B * C * !D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * B * !C * D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 22.2836;
      when : "(A * B * !C * D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * B * !C * !D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 40.1307;
      when : "(A * B * !C * !D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * !B * C * D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 22.1376;
      when : "(A * !B * C * D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * !B * C * !D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 35.572;
      when : "(A * !B * C * !D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * !B * !C * D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 33.1281;
      when : "(A * !B * !C * D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * !B * !C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 26.8786;
      when : "(A * !B * !C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * B * C * D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 13.0153;
      when : "(!A * B * C * D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * B * C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 13.0733;
      when : "(!A * B * C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * B * !C * D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 13.0261;
      when : "(!A * B * !C * D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * B * !C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 13.1326;
      when : "(!A * B * !C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * !B * C * D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 13.0763;
      when : "(!A * !B * C * D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * !B * C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 13.1326;
      when : "(!A * !B * C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * !B * !C * D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 13.1354;
      when : "(!A * !B * !C * D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * !B * !C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 5.90151;
      when : "(!A * !B * !C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 20.1767;
      related_pg_pin : vdd!;
    }
    pin (S) {
      direction : output;
      function : "(!A) + (!B * !C * !D)";
      power_down_function : "(!vdd!) + (gnd!)";
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_capacitance : 0.08;
      timing () {
        related_pin : "A";
        sdf_cond : "(B & C & D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(B * C * D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00901829, 0.015986, 0.04, 0.0912842, 0.279222", \
            "0.0216904, 0.033733, 0.0633668, 0.113846, 0.301121", \
            "0.0274415, 0.0431229, 0.0816755, 0.139247, 0.324937", \
            "0.034229, 0.0543726, 0.103957, 0.178391, 0.371061" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0102863, 0.0209236, 0.0581438, 0.137908, 0.430445", \
            "0.0269442, 0.0369604, 0.0661156, 0.138591, 0.43045", \
            "0.0420045, 0.0541874, 0.0869941, 0.150501, 0.430448", \
            "0.0674951, 0.0827913, 0.122245, 0.187362, 0.438344" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00988668, 0.0172956, 0.042886, 0.0975565, 0.297938", \
            "0.0203824, 0.0328131, 0.0637954, 0.117672, 0.317531", \
            "0.0239542, 0.0400005, 0.0799576, 0.140552, 0.338842", \
            "0.0267275, 0.0471107, 0.0981425, 0.175672, 0.380199" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00983993, 0.02019, 0.0564085, 0.134004, 0.41839", \
            "0.0257633, 0.0353843, 0.0636812, 0.134447, 0.418387", \
            "0.0411214, 0.0527182, 0.0841098, 0.145361, 0.418392", \
            "0.0672139, 0.0818386, 0.11918, 0.181847, 0.424923" \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "(B & C & ~D) | (B & ~C & D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(B * C * !D) + (B * !C * D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00904267, 0.016009, 0.0400229, 0.0913158, 0.279239", \
            "0.0214543, 0.0336106, 0.0633272, 0.113857, 0.301132", \
            "0.0267602, 0.0425866, 0.0814037, 0.139146, 0.324908", \
            "0.0326317, 0.0530541, 0.103127, 0.177905, 0.370905" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0102862, 0.0209251, 0.0581437, 0.13791, 0.430444", \
            "0.0271072, 0.0370633, 0.0661448, 0.138607, 0.430451", \
            "0.0424166, 0.054615, 0.0872019, 0.150563, 0.430446", \
            "0.0682718, 0.0834884, 0.123, 0.187764, 0.438387" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0106094, 0.0186467, 0.0464078, 0.105723, 0.323113", \
            "0.0216897, 0.0346194, 0.0668845, 0.125496, 0.342367", \
            "0.0260065, 0.04259, 0.0842193, 0.148016, 0.363359", \
            "0.030078, 0.0510925, 0.103932, 0.184843, 0.404147" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0108137, 0.0221, 0.0616014, 0.146229, 0.456358", \
            "0.0264963, 0.0368117, 0.0677819, 0.146412, 0.456358", \
            "0.0418812, 0.0541627, 0.0879139, 0.156149, 0.456355", \
            "0.0682471, 0.0836856, 0.123042, 0.190862, 0.460998" \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "(B & ~C & ~D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(B * !C * !D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00908613, 0.0160498, 0.0400496, 0.0913233, 0.279236", \
            "0.0207978, 0.0332218, 0.0631704, 0.113865, 0.301168", \
            "0.0248482, 0.0412294, 0.080732, 0.138682, 0.32478", \
            "0.0280526, 0.0493537, 0.1009, 0.176676, 0.37043" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0102842, 0.0209181, 0.058152, 0.137896, 0.430433", \
            "0.027555, 0.0373781, 0.0662174, 0.138618, 0.430437", \
            "0.0434643, 0.05569, 0.0878372, 0.150566, 0.430425", \
            "0.0701439, 0.085845, 0.124883, 0.188762, 0.438501" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0130018, 0.023293, 0.0588045, 0.134655, 0.412607", \
            "0.0254197, 0.0398919, 0.0775757, 0.152692, 0.430018", \
            "0.031776, 0.0500267, 0.0969991, 0.173528, 0.449072", \
            "0.0395252, 0.0624125, 0.120842, 0.212984, 0.486844" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0143566, 0.0288699, 0.0795719, 0.188244, 0.586402", \
            "0.0288192, 0.0416207, 0.0834713, 0.188244, 0.586402", \
            "0.0443732, 0.0587107, 0.10086, 0.193922, 0.586404", \
            "0.0709719, 0.0884356, 0.135407, 0.222585, 0.587217" \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "(~B & C & D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(!B * C * D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0094987, 0.0166798, 0.0412524, 0.0929722, 0.280955", \
            "0.023619, 0.0353205, 0.0646402, 0.115515, 0.302836", \
            "0.0309896, 0.045736, 0.083554, 0.140623, 0.326609", \
            "0.0400323, 0.0583555, 0.106338, 0.180007, 0.37267" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0145406, 0.0251661, 0.0622645, 0.141936, 0.434393", \
            "0.0333365, 0.0418743, 0.0701215, 0.142625, 0.434391", \
            "0.0506274, 0.0608326, 0.0913328, 0.154381, 0.434387", \
            "0.0788283, 0.0917349, 0.128379, 0.19158, 0.442305" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.013052, 0.0212889, 0.0492743, 0.108758, 0.326513", \
            "0.0263731, 0.0384649, 0.0698507, 0.128024, 0.345752", \
            "0.0321248, 0.0475532, 0.0878659, 0.150954, 0.366721", \
            "0.0379488, 0.0575027, 0.108564, 0.188466, 0.407465" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0139, 0.025228, 0.0648464, 0.149706, 0.460437", \
            "0.0286633, 0.0388998, 0.0705936, 0.149825, 0.46044", \
            "0.044329, 0.0563864, 0.0900433, 0.159041, 0.460433", \
            "0.071013, 0.0858984, 0.125359, 0.193163, 0.464816" \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "(~B & C & ~D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(!B * C * !D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00951519, 0.016675, 0.0411767, 0.0928129, 0.280757", \
            "0.0228445, 0.0348362, 0.0643739, 0.115341, 0.30269", \
            "0.0288576, 0.0441435, 0.0826715, 0.140177, 0.326308", \
            "0.0350109, 0.054261, 0.103819, 0.178604, 0.372027" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.014279, 0.0249267, 0.062053, 0.141734, 0.434194", \
            "0.0335378, 0.0419694, 0.0700146, 0.142419, 0.434199", \
            "0.051431, 0.0616131, 0.0917758, 0.154349, 0.434178", \
            "0.0806398, 0.0936841, 0.130029, 0.192319, 0.442247" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0162462, 0.0267215, 0.0624271, 0.138382, 0.416397", \
            "0.0306213, 0.0442839, 0.0812831, 0.156372, 0.433805", \
            "0.0384887, 0.0554664, 0.101128, 0.177063, 0.452846", \
            "0.0480333, 0.0693943, 0.125861, 0.216844, 0.490594" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0183198, 0.0328491, 0.0836505, 0.192408, 0.59081", \
            "0.0316415, 0.0444074, 0.0871544, 0.192401, 0.59081", \
            "0.0472905, 0.0615469, 0.103677, 0.197593, 0.590815", \
            "0.0743556, 0.0913534, 0.138258, 0.225599, 0.591534" \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "(~B & ~C & D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(!B * !C * D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00951948, 0.0166822, 0.0412272, 0.0932324, 0.282223", \
            "0.0228757, 0.0348761, 0.0644523, 0.115753, 0.304151", \
            "0.0290491, 0.0443267, 0.0829561, 0.140653, 0.327772", \
            "0.0361185, 0.0551474, 0.104715, 0.179661, 0.373426" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0164413, 0.0284726, 0.0664544, 0.146042, 0.438329", \
            "0.0385178, 0.046347, 0.0743824, 0.146729, 0.438321", \
            "0.0589937, 0.0677258, 0.0962178, 0.158622, 0.438327", \
            "0.0913803, 0.102092, 0.135653, 0.196534, 0.446377" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0183862, 0.0295308, 0.0661057, 0.14284, 0.422629", \
            "0.034612, 0.0479829, 0.084858, 0.160774, 0.439986", \
            "0.0439489, 0.0603894, 0.105268, 0.181415, 0.459158", \
            "0.0553439, 0.0758028, 0.131173, 0.221361, 0.496618" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0224188, 0.0371416, 0.0882728, 0.197685, 0.598504", \
            "0.0343676, 0.0471113, 0.0910664, 0.197691, 0.598509", \
            "0.049932, 0.064302, 0.106722, 0.202413, 0.59851", \
            "0.077176, 0.0941318, 0.141426, 0.229206, 0.599062" \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00951948, 0.0166822, 0.0412272, 0.0932324, 0.282223", \
            "0.0228757, 0.0348761, 0.0644523, 0.115753, 0.304151", \
            "0.0290491, 0.0443267, 0.0829561, 0.140653, 0.327772", \
            "0.0361185, 0.0551474, 0.104715, 0.179661, 0.373426" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0164413, 0.0284726, 0.0664544, 0.146042, 0.438329", \
            "0.0385178, 0.046347, 0.0743824, 0.146729, 0.438321", \
            "0.0589937, 0.0677258, 0.0962178, 0.158622, 0.438327", \
            "0.0913803, 0.102092, 0.135653, 0.196534, 0.446377" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0183862, 0.0295308, 0.0661057, 0.14284, 0.422629", \
            "0.034612, 0.0479829, 0.084858, 0.160774, 0.439986", \
            "0.0439489, 0.0603894, 0.105268, 0.181415, 0.459158", \
            "0.0553439, 0.0758028, 0.131173, 0.221361, 0.496618" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0224188, 0.0371416, 0.0882728, 0.197685, 0.598504", \
            "0.0343676, 0.0471113, 0.0910664, 0.197691, 0.598509", \
            "0.049932, 0.064302, 0.106722, 0.202413, 0.59851", \
            "0.077176, 0.0941318, 0.141426, 0.229206, 0.599062" \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0307946, 0.0512237, 0.121571, 0.271683, 0.821535", \
            "0.0499388, 0.070333, 0.138359, 0.28711, 0.836147", \
            "0.0673443, 0.0910215, 0.159655, 0.306288, 0.852482", \
            "0.0950877, 0.122853, 0.202664, 0.346872, 0.886176" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.043277, 0.0738338, 0.180304, 0.407867, 1.2412", \
            "0.0522369, 0.0787292, 0.180292, 0.407827, 1.2412", \
            "0.066063, 0.0939008, 0.186595, 0.407893, 1.2412", \
            "0.0901625, 0.120109, 0.212772, 0.417455, 1.24119" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0164606, 0.0267106, 0.0621711, 0.137993, 0.415828", \
            "0.0239813, 0.0381337, 0.0763651, 0.152377, 0.430102", \
            "0.0227392, 0.0415556, 0.0880819, 0.166403, 0.443961", \
            "0.0143913, 0.0393408, 0.0994813, 0.190849, 0.470566" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0143876, 0.0288783, 0.0795898, 0.188168, 0.586394", \
            "0.0261984, 0.0381122, 0.0823023, 0.188212, 0.586394", \
            "0.0419281, 0.0543345, 0.0955346, 0.192436, 0.586395", \
            "0.0690326, 0.0836993, 0.126281, 0.214056, 0.587601" \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0372236, 0.0575868, 0.127904, 0.277998, 0.827863", \
            "0.0512662, 0.0722647, 0.141704, 0.291186, 0.840762", \
            "0.0657378, 0.0886186, 0.159076, 0.306651, 0.854611", \
            "0.0897649, 0.115984, 0.193321, 0.339899, 0.882442" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0432987, 0.0738337, 0.180326, 0.407918, 1.2412", \
            "0.0514696, 0.078204, 0.18038, 0.40783, 1.2412", \
            "0.0649844, 0.0914032, 0.1862, 0.407891, 1.2412", \
            "0.0889559, 0.116047, 0.207905, 0.415908, 1.24119" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0195519, 0.0299107, 0.0655134, 0.141408, 0.419315", \
            "0.0285357, 0.0419255, 0.0795121, 0.155393, 0.433322", \
            "0.0294614, 0.0468201, 0.0917331, 0.169624, 0.447268", \
            "0.0251016, 0.0476736, 0.104963, 0.19505, 0.473951" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0183214, 0.0328486, 0.0836436, 0.192398, 0.590802", \
            "0.0295034, 0.0414933, 0.0861713, 0.192424, 0.590802", \
            "0.0456729, 0.0578267, 0.0989215, 0.196382, 0.590803", \
            "0.0738703, 0.0879721, 0.129886, 0.218019, 0.591911" \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0395105, 0.0598778, 0.130181, 0.280276, 0.830142", \
            "0.0496068, 0.0704974, 0.140181, 0.290093, 0.839812", \
            "0.0590145, 0.0810422, 0.151321, 0.299301, 0.847508", \
            "0.0759453, 0.100704, 0.174935, 0.321028, 0.863894" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0432964, 0.0738292, 0.180327, 0.407918, 1.24121", \
            "0.0492947, 0.0769733, 0.180436, 0.407864, 1.24121", \
            "0.0628333, 0.0886139, 0.185206, 0.407902, 1.24121", \
            "0.0884268, 0.113788, 0.204322, 0.41503, 1.24119" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0213627, 0.0323871, 0.0688509, 0.145506, 0.425184", \
            "0.0318958, 0.0451376, 0.0829647, 0.159527, 0.439232", \
            "0.0350552, 0.0517968, 0.0962691, 0.174301, 0.453642", \
            "0.0350501, 0.0563618, 0.111841, 0.201107, 0.481152" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0224945, 0.0371817, 0.0882605, 0.19767, 0.598496", \
            "0.0331284, 0.045104, 0.0905339, 0.197736, 0.598496", \
            "0.0499457, 0.0618292, 0.102948, 0.201404, 0.598496", \
            "0.0801077, 0.0932064, 0.134033, 0.222453, 0.599488" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * C * D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * C * D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000573942, 0.00058493, 0.00059071, 0.000593056, 0.000591952", \
            "0.000883081, 0.000812353, 0.00072068, 0.000664916, 0.000617992", \
            "0.00138544, 0.00124369, 0.00102621, 0.000862421, 0.000705667", \
            "0.00238233, 0.00217077, 0.00175966, 0.00139246, 0.000979507" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "6.5893e-05, 7.38417e-05, 7.90446e-05, 8.00642e-05, 7.78448e-05", \
            "0.000317929, 0.000247303, 0.000166617, 0.000125717, 9.33917e-05", \
            "0.000796498, 0.00063564, 0.000413585, 0.000273642, 0.000154639", \
            "0.0017736, 0.00151911, 0.00105235, 0.000692459, 0.000356427" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * C * !D) + (B * !C * D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * C * !D) + (B * !C * D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000577842, 0.000587024, 0.000593953, 0.000596232, 0.0005954", \
            "0.00087689, 0.000809126, 0.000719028, 0.000665998, 0.00062139", \
            "0.00136756, 0.00122693, 0.0010135, 0.000855663, 0.000705455", \
            "0.00233753, 0.00213282, 0.00172661, 0.00136881, 0.000969335" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "6.88701e-05, 7.67587e-05, 8.18501e-05, 8.27615e-05, 8.02053e-05", \
            "0.00030995, 0.000240861, 0.000165994, 0.000125377, 9.50536e-05", \
            "0.000773257, 0.000616844, 0.000403706, 0.000264544, 0.000153482", \
            "0.00172675, 0.00147161, 0.00101865, 0.000670263, 0.00034725" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * !C * !D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * !C * !D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000582078, 0.000590607, 0.000596706, 0.000599365, 0.000600778", \
            "0.000853379, 0.000791365, 0.000714476, 0.000664725, 0.000627953", \
            "0.00130872, 0.00117927, 0.000977811, 0.000831365, 0.000704438", \
            "0.00222058, 0.00202021, 0.00163643, 0.00130002, 0.000941168" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "9.44467e-05, 0.000102622, 0.000107105, 0.000106947, 0.000100479", \
            "0.00030809, 0.000244122, 0.000175609, 0.000139864, 0.000109988", \
            "0.000728461, 0.000586331, 0.000394504, 0.00026717, 0.000163089", \
            "0.00161136, 0.00136741, 0.000950497, 0.000638204, 0.000338734" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(!B * C * D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(!B * C * D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000757408, 0.000766574, 0.000773448, 0.000775567, 0.000774545", \
            "0.00104945, 0.000985647, 0.000896533, 0.000845377, 0.000800435", \
            "0.00152918, 0.00139804, 0.00119144, 0.00102889, 0.000884405", \
            "0.00248459, 0.00229142, 0.00189924, 0.00154807, 0.00114737" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000193699, 0.000199772, 0.000204166, 0.000204945, 0.000202064", \
            "0.000399846, 0.00034884, 0.00028299, 0.00024674, 0.000216762", \
            "0.00083039, 0.000700074, 0.000513519, 0.000382941, 0.000274602", \
            "0.0017492, 0.00152514, 0.00111096, 0.0007828, 0.000466378" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(!B * C * !D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(!B * C * !D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000754418, 0.000763244, 0.000769206, 0.000771767, 0.000772572", \
            "0.00102046, 0.000961078, 0.000885291, 0.000836987, 0.000799557", \
            "0.00146589, 0.00134367, 0.00114628, 0.00100375, 0.000875852", \
            "0.00236546, 0.00217708, 0.00180373, 0.00147138, 0.00111051" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000213009, 0.000219283, 0.000223466, 0.000223591, 0.000218368", \
            "0.000394133, 0.000347903, 0.000289575, 0.000255734, 0.00022788", \
            "0.00078544, 0.000667484, 0.00050065, 0.000380258, 0.00028072", \
            "0.00163239, 0.00141949, 0.00103977, 0.000744576, 0.00045458" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(!B * !C * D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(!B * !C * D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000945564, 0.000954171, 0.000960068, 0.000962335, 0.000963061", \
            "0.00120894, 0.00115321, 0.0010753, 0.0010276, 0.000989891", \
            "0.00165077, 0.00153163, 0.00133497, 0.00119444, 0.00106592", \
            "0.00253655, 0.00235517, 0.00199076, 0.00166189, 0.00130153" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000328741, 0.000334644, 0.000338864, 0.000338826, 0.000333287", \
            "0.00049526, 0.000455157, 0.000402064, 0.000370417, 0.000342617", \
            "0.000857588, 0.000756453, 0.000607149, 0.000491816, 0.00039698", \
            "0.00166729, 0.0014754, 0.00112939, 0.000850447, 0.000569009" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : gnd!;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000945564, 0.000954171, 0.000960068, 0.000962335, 0.000963061", \
            "0.00120894, 0.00115321, 0.0010753, 0.0010276, 0.000989891", \
            "0.00165077, 0.00153163, 0.00133497, 0.00119444, 0.00106592", \
            "0.00253655, 0.00235517, 0.00199076, 0.00166189, 0.00130153" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "6.5893e-05, 7.38417e-05, 7.90446e-05, 8.00642e-05, 7.78448e-05", \
            "0.000317929, 0.000247303, 0.000166617, 0.000125717, 9.33917e-05", \
            "0.000796498, 0.00063564, 0.000413585, 0.000273642, 0.000154639", \
            "0.0017736, 0.00151911, 0.00105235, 0.000692459, 0.000356427" \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000972053, 0.000973955, 0.00097546, 0.000976186, 0.000965797", \
            "0.00113168, 0.00109144, 0.00103506, 0.00100333, 0.000970577", \
            "0.00144155, 0.00136044, 0.00119972, 0.00111487, 0.00101187", \
            "0.00209375, 0.00195942, 0.00169873, 0.00144258, 0.00116751" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000128933, 0.000134696, 0.000137579, 0.000136813, 0.000130039", \
            "0.000215796, 0.000190796, 0.000171975, 0.000163392, 0.000150409", \
            "0.000489925, 0.000403234, 0.000292143, 0.000230648, 0.000177649", \
            "0.00112015, 0.000955201, 0.000666133, 0.000458852, 0.000282257" \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00118384, 0.00118433, 0.00118493, 0.00118525, 0.00117398", \
            "0.00126362, 0.00123812, 0.0012071, 0.00119239, 0.00117086", \
            "0.00154451, 0.00147054, 0.00135438, 0.00127544, 0.00120227", \
            "0.00217866, 0.00204374, 0.00179984, 0.00156167, 0.00132889" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000203347, 0.000203804, 0.000203495, 0.000202008, 0.000195935", \
            "0.00027075, 0.000249346, 0.000228126, 0.000215372, 0.00020205", \
            "0.000531669, 0.000457593, 0.000349576, 0.000285063, 0.000229656", \
            "0.00115287, 0.00100999, 0.000740476, 0.000526894, 0.000340695" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00139749, 0.00139804, 0.00139837, 0.00139848, 0.00138666", \
            "0.00143297, 0.00141884, 0.00140064, 0.00139705, 0.00138", \
            "0.00169406, 0.00162635, 0.00153171, 0.00146734, 0.00140541", \
            "0.00236633, 0.0022263, 0.00196789, 0.00174144, 0.00152957" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000275085, 0.000274903, 0.000274163, 0.000272492, 0.000266022", \
            "0.000325311, 0.000306506, 0.000279957, 0.00026569, 0.000250956", \
            "0.000580258, 0.000505804, 0.00039879, 0.000332112, 0.000275392", \
            "0.0012281, 0.00107487, 0.000793787, 0.00057198, 0.00038195" \
          );
        }
      }
    }
    pin (A) {
      direction : input;
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_transition : 0.31;
      capacitance : 0.00108804;
      rise_capacitance : 0.00108804;
      rise_capacitance_range (0.000721708, 0.00108804);
      fall_capacitance : 0.00108791;
      fall_capacitance_range (0.000708667, 0.00108791);
      internal_power () {
        when : "(!B * !C * !D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!B * !C * !D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000201631, -0.000203868, -0.000207514, -0.000221821" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000279211, 0.000279929, 0.000280378, 0.000280031" \
          );
        }
      }
    }
    pin (B) {
      direction : input;
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_transition : 0.31;
      capacitance : 0.00101991;
      rise_capacitance : 0.00101991;
      rise_capacitance_range (0.000787383, 0.00101991);
      fall_capacitance : 0.00100669;
      fall_capacitance_range (0.000679329, 0.00100669);
      internal_power () {
        when : "(A * C * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * C * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-3.90456e-05, -3.87553e-05, -3.87765e-05, -3.86918e-05" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "5.35394e-05, 5.31571e-05, 5.27556e-05, 5.16446e-05" \
          );
        }
      }
      internal_power () {
        when : "(A * !C * D * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * !C * D * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-3.505e-05, -3.47862e-05, -3.48244e-05, -3.46666e-05" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "6.62126e-05, 6.50282e-05, 6.31226e-05, 5.69688e-05" \
          );
        }
      }
      internal_power () {
        when : "(!A * C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000186577, -0.000197331, -0.000198551, -0.000199235" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000210635, 0.000210486, 0.000210745, 0.000210451" \
          );
        }
      }
      internal_power () {
        when : "(!A * !C * D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * !C * D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000172222, -0.00019028, -0.000193597, -0.000195382" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000208724, 0.00020868, 0.000208908, 0.000208616" \
          );
        }
      }
      internal_power () {
        when : "(!A * !C * !D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * !C * !D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.00020364, -0.000203979, -0.000204107, -0.000204214" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000231149, 0.000216486, 0.000215309, 0.000213508" \
          );
        }
      }
    }
    pin (C) {
      direction : input;
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_transition : 0.31;
      capacitance : 0.00106328;
      rise_capacitance : 0.00106061;
      rise_capacitance_range (0.000841281, 0.00106061);
      fall_capacitance : 0.00106328;
      fall_capacitance_range (0.000748868, 0.00106328);
      internal_power () {
        when : "(A * B * D * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * B * D * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000118242, -0.000119716, -0.000120895, -0.000122399" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000130069, 0.000129258, 0.0001296, 0.0001293" \
          );
        }
      }
      internal_power () {
        when : "(A * B * !D * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * B * !D * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000160889, -0.000213567, -0.000217751, -0.000221369" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000263353, 0.000261809, 0.000262253, 0.000261121" \
          );
        }
      }
      internal_power () {
        when : "(A * !B * D * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * !B * D * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-6.04851e-05, -6.01499e-05, -6.13442e-05, -6.42933e-05" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000101964, 0.000101381, 0.000101537, 0.000101222" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000134204, -0.000133409, -0.000133665, -0.000133236" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000134204, 0.000133409, 0.000133665, 0.000133236" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * !D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * !D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000230549, -0.000232206, -0.000232694, -0.000232746" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000246937, 0.000247431, 0.000247251, 0.000246823" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000229036, -0.0002297, -0.000230853, -0.000231322" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000246521, 0.000246317, 0.000246507, 0.00024623" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * !D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * !D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000239483, -0.000239898, -0.000239954, -0.000239974" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000266807, 0.00025238, 0.00025112, 0.00024926" \
          );
        }
      }
    }
    pin (D) {
      direction : input;
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_transition : 0.31;
      capacitance : 0.00108224;
      rise_capacitance : 0.00107221;
      rise_capacitance_range (0.000885027, 0.00107221);
      fall_capacitance : 0.00108224;
      fall_capacitance_range (0.000869586, 0.00108224);
      internal_power () {
        when : "(A * B * C * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * B * C * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000237124, -0.000251055, -0.000252273, -0.000252859" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000275082, 0.000275945, 0.000275786, 0.000275256" \
          );
        }
      }
      internal_power () {
        when : "(A * B * !C * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * B * !C * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000197801, -0.000236693, -0.000240882, -0.000243465" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000297994, 0.000296662, 0.000296839, 0.000295683" \
          );
        }
      }
      internal_power () {
        when : "(A * !B * C * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * !B * C * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000205929, -0.000244341, -0.000247152, -0.000248755" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000284946, 0.000286972, 0.000285729, 0.000284888" \
          );
        }
      }
      internal_power () {
        when : "(!A * C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000244451, -0.000254306, -0.000255461, -0.000256064" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000269225, 0.000270152, 0.000270626, 0.000270125" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * !C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * !C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000231501, -0.000247975, -0.000250648, -0.000252211" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.00026978, 0.000269248, 0.000269685, 0.000269178" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * !C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * !C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000265754, -0.000264141, -0.000264324, -0.000264362" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000290143, 0.000276676, 0.0002756, 0.000273773" \
          );
        }
      }
    }
  }
  cell (inv) {
    area : 0;
    cell_leakage_power : 12.9273;
    pg_pin (gnd!) {
      pg_type : primary_ground;
      voltage_name : "gnd!";
    }
    pg_pin (vdd!) {
      pg_type : primary_power;
      voltage_name : "vdd!";
    }
    leakage_power () {
      value : 0;
      when : "(A * !Z)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 17.0551;
      when : "(A * !Z)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * Z)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 8.79954;
      when : "(!A * Z)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 12.9273;
      related_pg_pin : vdd!;
    }
    pin (Z) {
      direction : output;
      function : "!A";
      power_down_function : "(!vdd!) + (gnd!)";
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_capacitance : 0.08;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00811773, 0.015127, 0.0393155, 0.0910039, 0.280465", \
            "0.0205509, 0.0329222, 0.0630088, 0.113888, 0.302629", \
            "0.0265402, 0.0425343, 0.0815819, 0.139481, 0.32669", \
            "0.0341634, 0.054673, 0.104518, 0.179294, 0.373346" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00911634, 0.019828, 0.0573272, 0.137682, 0.432369", \
            "0.0251775, 0.0356741, 0.065337, 0.138361, 0.432369", \
            "0.0393487, 0.0521244, 0.0858509, 0.150039, 0.432373", \
            "0.0636041, 0.0792428, 0.119828, 0.186528, 0.43992" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00771542, 0.0141254, 0.0362573, 0.0835776, 0.25698", \
            "0.0166011, 0.0286268, 0.0574972, 0.104526, 0.277375", \
            "0.0186872, 0.034376, 0.072101, 0.127923, 0.29943", \
            "0.0190314, 0.0391314, 0.0878599, 0.160129, 0.342274" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00733213, 0.0161534, 0.047028, 0.113193, 0.355684", \
            "0.023403, 0.0320946, 0.0558243, 0.114344, 0.35568", \
            "0.0380741, 0.0489507, 0.0769206, 0.127376, 0.355681", \
            "0.063186, 0.077133, 0.111214, 0.166245, 0.36589" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000486004, 0.000497387, 0.000502301, 0.000503878, 0.000502891", \
            "0.000812781, 0.000732843, 0.000638011, 0.000578868, 0.000529766", \
            "0.00131586, 0.0011673, 0.000946146, 0.000773713, 0.000616726", \
            "0.00230826, 0.00208641, 0.00167242, 0.00131194, 0.000892781" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "3.20102e-06, 1.03263e-05, 1.5615e-05, 1.73238e-05, 1.62979e-05", \
            "0.000277375, 0.000195929, 0.000108867, 6.56952e-05, 3.32318e-05", \
            "0.00076649, 0.000594132, 0.000358448, 0.000212411, 9.47772e-05", \
            "0.00174824, 0.00148632, 0.00100159, 0.000634087, 0.000296414" \
          );
        }
      }
    }
    pin (A) {
      direction : input;
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_transition : 0.31;
      capacitance : 0.00103653;
      rise_capacitance : 0.00103653;
      rise_capacitance_range (0.000796862, 0.00103653);
      fall_capacitance : 0.001036;
      fall_capacitance_range (0.000758888, 0.001036);
    }
  }
}
