library (inv) {
  /* Models written by Liberate 15.1.0.503 from Cadence Design Systems, Inc. on Wed Jun 21 17:54:42 -03 2017 */
  comment : "";
  date : "$Date: Wed Jun 21 17:54:27 2017 $";
  revision : "1.0";
  delay_model : table_lookup;
  capacitive_load_unit (1,pf);
  current_unit : "1mA";
  leakage_power_unit : "1nW";
  pulling_resistance_unit : "1kohm";
  time_unit : "1ns";
  voltage_unit : "1V";
  voltage_map (vdd!, 1);
  voltage_map (gnd!, 0);
  voltage_map (VDD, 1);
  voltage_map (VSS, 0);
  voltage_map (GND, 0);
  default_cell_leakage_power : 0;
  default_fanout_load : 1;
  default_max_transition : 3;
  default_output_pin_cap : 0;
  in_place_swap_mode : match_footprint;
  input_threshold_pct_fall : 50;
  input_threshold_pct_rise : 50;
  nom_process : 1;
  nom_temperature : 25;
  nom_voltage : 1;
  output_threshold_pct_fall : 50;
  output_threshold_pct_rise : 50;
  slew_derate_from_library : 1;
  slew_lower_threshold_pct_fall : 20;
  slew_lower_threshold_pct_rise : 20;
  slew_upper_threshold_pct_fall : 80;
  slew_upper_threshold_pct_rise : 80;
  operating_conditions (PVT_1V_25C) {
    process : 1;
    temperature : 25;
    voltage : 1;
  }
  default_operating_conditions : PVT_1V_25C;
  lu_table_template (constraint_4x5) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("0.003, 0.08, 0.16, 0.31");
    index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
  }
  lu_table_template (delay_4x5) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.003, 0.08, 0.16, 0.31");
    index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
  }
  lu_table_template (mpw_constraint_4x5) {
    variable_1 : constrained_pin_transition;
    index_1 ("0.003, 0.08, 0.16, 0.31");
  }
  power_lut_template (passive_power_4x1) {
    variable_1 : input_transition_time;
    index_1 ("0.003, 0.08, 0.16, 0.31");
  }
  power_lut_template (power_4x5) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.003, 0.08, 0.16, 0.31");
    index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
  }
  cell (Complex_f2) {
    area : 0;
    cell_leakage_power : 20.0587;
    pg_pin (gnd!) {
      pg_type : primary_ground;
      voltage_name : "gnd!";
    }
    pg_pin (vdd!) {
      pg_type : primary_power;
      voltage_name : "vdd!";
    }
    leakage_power () {
      value : 0;
      when : "(A * B * C * D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 21.9131;
      when : "(A * B * C * D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * B * C * !D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 22.9602;
      when : "(A * B * C * !D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * B * !C * D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 22.1132;
      when : "(A * B * !C * D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * B * !C * !D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 40.1089;
      when : "(A * B * !C * !D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * !B * C * D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 21.9679;
      when : "(A * !B * C * D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * !B * C * !D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 35.5373;
      when : "(A * !B * C * !D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * !B * !C * D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 32.9945;
      when : "(A * !B * !C * D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * !B * !C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 27.1833;
      when : "(A * !B * !C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * B * C * D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 12.8232;
      when : "(!A * B * C * D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * B * C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 12.8814;
      when : "(!A * B * C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * B * !C * D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 12.8347;
      when : "(!A * B * !C * D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * B * !C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 12.9413;
      when : "(!A * B * !C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * !B * C * D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 12.8846;
      when : "(!A * !B * C * D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * !B * C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 12.9412;
      when : "(!A * !B * C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * !B * !C * D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 12.9444;
      when : "(!A * !B * !C * D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * !B * !C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 5.91075;
      when : "(!A * !B * !C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 20.0587;
      related_pg_pin : vdd!;
    }
    pin (S) {
      direction : output;
      function : "(!A) + (!B * !C * !D)";
      power_down_function : "(!vdd!) + (gnd!)";
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_capacitance : 0.08;
      timing () {
        related_pin : "A";
        sdf_cond : "(B & C & D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(B * C * D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00898581, 0.0159509, 0.0399779, 0.091301, 0.279397", \
            "0.0217052, 0.0337465, 0.0633697, 0.113896, 0.301317", \
            "0.0274378, 0.0431373, 0.0817132, 0.139305, 0.325147", \
            "0.0342315, 0.0544137, 0.103985, 0.178485, 0.371302" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0103524, 0.0209989, 0.0582441, 0.138064, 0.430823", \
            "0.0270244, 0.0370014, 0.0662097, 0.138763, 0.430827", \
            "0.0421528, 0.054271, 0.0870722, 0.15064, 0.430815", \
            "0.0675197, 0.0828517, 0.122353, 0.187483, 0.438675" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00987138, 0.0172828, 0.0429014, 0.0976551, 0.298326", \
            "0.0204974, 0.0329158, 0.0638869, 0.117851, 0.317986", \
            "0.024164, 0.0401847, 0.0800985, 0.140666, 0.339356", \
            "0.0270277, 0.0474202, 0.0984751, 0.176057, 0.380601" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00991384, 0.0202793, 0.0565485, 0.134261, 0.419071", \
            "0.0258089, 0.0354348, 0.0637805, 0.134719, 0.41907", \
            "0.0411211, 0.0527612, 0.0841938, 0.145535, 0.419069", \
            "0.0672252, 0.0819993, 0.119216, 0.181963, 0.425317" \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "(B & C & ~D) | (B & ~C & D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(B * C * !D) + (B * !C * D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00901114, 0.0159712, 0.0399993, 0.0913255, 0.2794", \
            "0.0214712, 0.0336119, 0.063336, 0.113888, 0.301316", \
            "0.0267825, 0.0426324, 0.0814396, 0.139205, 0.325117", \
            "0.0326458, 0.0531006, 0.103167, 0.178088, 0.371115" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0103523, 0.0209988, 0.058244, 0.138063, 0.43081", \
            "0.027186, 0.0371447, 0.0662345, 0.138781, 0.430815", \
            "0.042463, 0.0546868, 0.0872824, 0.150701, 0.430813", \
            "0.0683488, 0.0837173, 0.123097, 0.187936, 0.43873" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0105846, 0.018626, 0.0464132, 0.105799, 0.323457", \
            "0.021806, 0.0347122, 0.0669225, 0.125635, 0.342776", \
            "0.0261983, 0.0427611, 0.084395, 0.148212, 0.363823", \
            "0.0303627, 0.0513483, 0.104235, 0.185254, 0.404696" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0108961, 0.0221925, 0.0617457, 0.146472, 0.456973", \
            "0.0265308, 0.0368635, 0.0678904, 0.146656, 0.456973", \
            "0.0419408, 0.0542094, 0.0879799, 0.156333, 0.456974", \
            "0.0682611, 0.0836973, 0.123107, 0.191036, 0.461538" \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "(B & ~C & ~D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(B * !C * !D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00904238, 0.0160098, 0.0400214, 0.0913333, 0.279392", \
            "0.0208318, 0.0332411, 0.0632032, 0.113905, 0.301352", \
            "0.0248984, 0.0412588, 0.0807718, 0.138739, 0.324986", \
            "0.0280861, 0.04939, 0.100959, 0.176783, 0.370665" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0103504, 0.0209976, 0.0582524, 0.138053, 0.430799", \
            "0.0276068, 0.0374365, 0.0663294, 0.138749, 0.430803", \
            "0.0436024, 0.0557645, 0.0879143, 0.150704, 0.43079", \
            "0.070211, 0.0859166, 0.124964, 0.188881, 0.438834" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0129261, 0.0232202, 0.0587497, 0.134662, 0.41278", \
            "0.0254965, 0.0399863, 0.0777248, 0.152706, 0.43029", \
            "0.0319474, 0.05017, 0.0970655, 0.173569, 0.449399", \
            "0.0397682, 0.0626499, 0.121094, 0.213249, 0.487286" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0144777, 0.029013, 0.07976, 0.1884, 0.586876", \
            "0.028827, 0.0416661, 0.0837459, 0.188444, 0.586876", \
            "0.0443907, 0.0587527, 0.100921, 0.194, 0.586878", \
            "0.0710381, 0.08847, 0.135476, 0.222708, 0.587667" \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "(~B & C & D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(!B * C * D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00947046, 0.0166496, 0.0412627, 0.0930976, 0.281257", \
            "0.0236726, 0.0353734, 0.0646943, 0.115672, 0.303169", \
            "0.031144, 0.0458474, 0.0836983, 0.140795, 0.326958", \
            "0.0404305, 0.0586555, 0.106597, 0.180273, 0.373042" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0149146, 0.0255614, 0.0626742, 0.142423, 0.435066", \
            "0.0338353, 0.0422902, 0.0705177, 0.143101, 0.435067", \
            "0.051274, 0.0614229, 0.0917385, 0.154799, 0.435061", \
            "0.079643, 0.0924112, 0.128779, 0.191879, 0.442933" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0131444, 0.0214115, 0.049457, 0.109029, 0.327084", \
            "0.0267107, 0.0387585, 0.0700973, 0.128358, 0.346394", \
            "0.03264, 0.0480142, 0.088235, 0.15134, 0.367524", \
            "0.0386767, 0.0581686, 0.109153, 0.189043, 0.408268" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0141799, 0.0255263, 0.0651868, 0.150183, 0.461337", \
            "0.0288446, 0.0390718, 0.0708564, 0.150306, 0.461337", \
            "0.0445149, 0.0565751, 0.0902191, 0.159421, 0.46134", \
            "0.0712068, 0.0862106, 0.125576, 0.193421, 0.465657" \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "(~B & C & ~D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(!B * C * !D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00947632, 0.0166416, 0.0411785, 0.0929194, 0.281031", \
            "0.0228995, 0.0348906, 0.0644318, 0.115477, 0.302992", \
            "0.0290148, 0.0442768, 0.082817, 0.140333, 0.326631", \
            "0.0353866, 0.0545716, 0.104073, 0.17886, 0.372394" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0146211, 0.0252938, 0.0624387, 0.142172, 0.434832", \
            "0.0339889, 0.0423406, 0.0703824, 0.142854, 0.434837", \
            "0.0520511, 0.0621082, 0.0921314, 0.154763, 0.434824", \
            "0.0814825, 0.0943613, 0.130481, 0.192777, 0.442837" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0163364, 0.0268397, 0.0625637, 0.138587, 0.416759", \
            "0.0309931, 0.0445816, 0.0814625, 0.156643, 0.434267", \
            "0.0389926, 0.0559469, 0.10143, 0.177414, 0.453362", \
            "0.0487485, 0.070007, 0.126468, 0.217462, 0.491229" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0186997, 0.0332345, 0.0840868, 0.192884, 0.5915", \
            "0.0318904, 0.0446329, 0.0874565, 0.192857, 0.5915", \
            "0.0475459, 0.0618062, 0.103899, 0.197991, 0.591505", \
            "0.0746119, 0.0915814, 0.138565, 0.225943, 0.592196" \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "(~B & ~C & D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(!B * !C * D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00947928, 0.0166478, 0.0412251, 0.0932978, 0.282566", \
            "0.0229251, 0.0349163, 0.0645011, 0.115852, 0.304523", \
            "0.0291796, 0.044433, 0.0830612, 0.140772, 0.328166", \
            "0.0363938, 0.055362, 0.104894, 0.179905, 0.373848" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0167825, 0.0289456, 0.067129, 0.146771, 0.439231", \
            "0.0391282, 0.0468977, 0.0750477, 0.147451, 0.439242", \
            "0.059915, 0.0685249, 0.0968674, 0.159333, 0.439248", \
            "0.0927518, 0.103206, 0.136463, 0.197141, 0.447253" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0185458, 0.0297658, 0.0664695, 0.143327, 0.423462", \
            "0.0351113, 0.0484279, 0.0852927, 0.161346, 0.440895", \
            "0.0446867, 0.0610565, 0.105842, 0.182035, 0.460133", \
            "0.0563834, 0.0767492, 0.132024, 0.222328, 0.497671" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0230184, 0.0377837, 0.0889845, 0.198535, 0.599811", \
            "0.0347761, 0.0474873, 0.0916597, 0.198546, 0.599817", \
            "0.050314, 0.0647074, 0.107186, 0.203153, 0.599813", \
            "0.0775706, 0.0945197, 0.141851, 0.23012, 0.600337" \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00947928, 0.0166478, 0.0412251, 0.0932978, 0.282566", \
            "0.0229251, 0.0349163, 0.0645011, 0.115852, 0.304523", \
            "0.0291796, 0.044433, 0.0830612, 0.140772, 0.328166", \
            "0.0363938, 0.055362, 0.104894, 0.179905, 0.373848" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0167825, 0.0289456, 0.067129, 0.146771, 0.439231", \
            "0.0391282, 0.0468977, 0.0750477, 0.147451, 0.439242", \
            "0.059915, 0.0685249, 0.0968674, 0.159333, 0.439248", \
            "0.0927518, 0.103206, 0.136463, 0.197141, 0.447253" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0185458, 0.0297658, 0.0664695, 0.143327, 0.423462", \
            "0.0351113, 0.0484279, 0.0852927, 0.161346, 0.440895", \
            "0.0446867, 0.0610565, 0.105842, 0.182035, 0.460133", \
            "0.0563834, 0.0767492, 0.132024, 0.222328, 0.497671" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0230184, 0.0377837, 0.0889845, 0.198535, 0.599811", \
            "0.0347761, 0.0474873, 0.0916597, 0.198546, 0.599817", \
            "0.050314, 0.0647074, 0.107186, 0.203153, 0.599813", \
            "0.0775706, 0.0945197, 0.141851, 0.23012, 0.600337" \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0309858, 0.0514142, 0.121736, 0.271749, 0.821236", \
            "0.0503797, 0.0705656, 0.138169, 0.287222, 0.835859", \
            "0.0678972, 0.0915068, 0.159905, 0.306371, 0.852201", \
            "0.0958802, 0.123493, 0.202986, 0.347035, 0.885902" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.044192, 0.0747412, 0.181174, 0.408682, 1.24153", \
            "0.052901, 0.079479, 0.181157, 0.408618, 1.24153", \
            "0.0667543, 0.0945988, 0.187332, 0.408696, 1.24153", \
            "0.0909091, 0.120794, 0.213445, 0.418146, 1.24151" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0166365, 0.0268761, 0.0623627, 0.138233, 0.416251", \
            "0.024293, 0.0384198, 0.0765601, 0.15246, 0.430555", \
            "0.023081, 0.0417966, 0.0881341, 0.166554, 0.444311", \
            "0.0147268, 0.039499, 0.0995703, 0.190877, 0.470739" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0145201, 0.0290058, 0.0797573, 0.188401, 0.586868", \
            "0.0262271, 0.0381983, 0.082403, 0.188445, 0.586869", \
            "0.0419494, 0.0543647, 0.0954595, 0.192635, 0.586878", \
            "0.0690061, 0.0837976, 0.126322, 0.214168, 0.588069" \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0383063, 0.0586755, 0.128976, 0.278979, 0.828475", \
            "0.0522188, 0.0731841, 0.142557, 0.292112, 0.841421", \
            "0.0666857, 0.0894224, 0.159941, 0.30758, 0.854921", \
            "0.0909048, 0.117203, 0.194224, 0.340524, 0.883594" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0442168, 0.0747419, 0.181196, 0.408632, 1.24153", \
            "0.0522565, 0.0790557, 0.181262, 0.408675, 1.24153", \
            "0.0658499, 0.0921665, 0.187027, 0.408664, 1.24153", \
            "0.0898982, 0.116906, 0.207936, 0.416214, 1.24151" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0200795, 0.0304738, 0.0661154, 0.142062, 0.420122", \
            "0.0291538, 0.0424986, 0.0800667, 0.156206, 0.43409", \
            "0.0301321, 0.0473957, 0.0923194, 0.170142, 0.447896", \
            "0.0257721, 0.0482104, 0.105283, 0.19503, 0.474457" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0187006, 0.0332333, 0.0840622, 0.19288, 0.591493", \
            "0.0297035, 0.0417408, 0.0865151, 0.19288, 0.591493", \
            "0.0458962, 0.0580194, 0.0993083, 0.19682, 0.591493", \
            "0.0742749, 0.0882916, 0.130157, 0.218072, 0.592623" \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0403846, 0.0607506, 0.131041, 0.281046, 0.830521", \
            "0.0506268, 0.0715174, 0.141282, 0.291032, 0.840439", \
            "0.0599956, 0.0820959, 0.152207, 0.300271, 0.848127", \
            "0.0770585, 0.101718, 0.175573, 0.321821, 0.864419" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0442179, 0.0747476, 0.181196, 0.408683, 1.24152", \
            "0.0498259, 0.077692, 0.181287, 0.408672, 1.24153", \
            "0.0634503, 0.089249, 0.185942, 0.40872, 1.24153", \
            "0.0893101, 0.114663, 0.204814, 0.415682, 1.24148" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0218, 0.0329014, 0.069494, 0.146283, 0.426309", \
            "0.0325107, 0.0457581, 0.0835739, 0.160523, 0.440389", \
            "0.0357675, 0.0524717, 0.0968966, 0.174997, 0.454669", \
            "0.0359848, 0.0571744, 0.112543, 0.201745, 0.482135" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0231088, 0.0378405, 0.0889836, 0.19852, 0.599803", \
            "0.0335505, 0.0455962, 0.0911765, 0.198537, 0.599803", \
            "0.0503874, 0.0622832, 0.103457, 0.202214, 0.599803", \
            "0.0806387, 0.093678, 0.134583, 0.223126, 0.60077" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * C * D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * C * D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000559691, 0.000569905, 0.000575461, 0.000577655, 0.000576515", \
            "0.00086809, 0.000799186, 0.000705831, 0.0006499, 0.00060248", \
            "0.00136582, 0.00122606, 0.00100967, 0.000846455, 0.000689975", \
            "0.00235572, 0.00214761, 0.00173815, 0.00137274, 0.000963275" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "8.03476e-05, 8.84296e-05, 9.32597e-05, 9.41581e-05, 9.18654e-05", \
            "0.000332562, 0.000261975, 0.000181425, 0.000140264, 0.000107661", \
            "0.000807834, 0.000647225, 0.000425204, 0.000284498, 0.000168605", \
            "0.0017769, 0.00152418, 0.00106154, 0.000702786, 0.000370214" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * C * !D) + (B * !C * D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * C * !D) + (B * !C * D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000563689, 0.000571529, 0.000577539, 0.000580641, 0.000579826", \
            "0.000861659, 0.000793864, 0.00070422, 0.000650851, 0.000605741", \
            "0.0013489, 0.0012086, 0.000996855, 0.000839691, 0.000689676", \
            "0.0023141, 0.00210819, 0.00170553, 0.00135151, 0.000950161" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "8.32427e-05, 9.0794e-05, 9.61141e-05, 9.69317e-05, 9.42675e-05", \
            "0.000324327, 0.000256261, 0.000179619, 0.000139992, 0.000109311", \
            "0.000784912, 0.000628745, 0.000416549, 0.000278333, 0.000167542", \
            "0.0017315, 0.00147765, 0.00102731, 0.000682539, 0.000360634" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * !C * !D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * !C * !D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00056623, 0.000576505, 0.00058126, 0.000583806, 0.000585174", \
            "0.000839005, 0.000777208, 0.00069929, 0.000649541, 0.000612444", \
            "0.00129179, 0.00116222, 0.00096151, 0.000815406, 0.000688599", \
            "0.00219895, 0.00199843, 0.0016163, 0.00128138, 0.000923829" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000110692, 0.000117929, 0.000122081, 0.000121796, 0.000115267", \
            "0.000322234, 0.00025874, 0.000192805, 0.000155461, 0.000126", \
            "0.000742165, 0.000598998, 0.000406201, 0.000280365, 0.000176905", \
            "0.00161729, 0.00137444, 0.000960268, 0.000649302, 0.00035111" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(!B * C * D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(!B * C * D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000743288, 0.000751177, 0.000757114, 0.000760025, 0.000758984", \
            "0.00103312, 0.000971332, 0.000881709, 0.00083025, 0.000785099", \
            "0.00150995, 0.00138131, 0.00117213, 0.00101278, 0.000868609", \
            "0.00245948, 0.0022682, 0.00187791, 0.00152793, 0.00112985" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000227989, 0.000234317, 0.000238504, 0.000239155, 0.000236081", \
            "0.000434352, 0.000383215, 0.000317656, 0.000281268, 0.000250943", \
            "0.000858525, 0.000730096, 0.000546126, 0.000416544, 0.000309394", \
            "0.00176979, 0.00154735, 0.00113808, 0.000813191, 0.000498772" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(!B * C * !D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(!B * C * !D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000739109, 0.000749205, 0.000753756, 0.000756224, 0.000757006", \
            "0.00100527, 0.000947243, 0.000869956, 0.000821834, 0.000784126", \
            "0.00144949, 0.00132801, 0.00113087, 0.000987779, 0.000860051", \
            "0.00234006, 0.00215329, 0.00178332, 0.00145447, 0.00109498" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000249319, 0.000254774, 0.000258466, 0.000258455, 0.000253107", \
            "0.000427575, 0.000382012, 0.000325915, 0.00029118, 0.000263899", \
            "0.000815094, 0.000698241, 0.000531882, 0.000413782, 0.000314429", \
            "0.00165309, 0.00144313, 0.00106909, 0.00077833, 0.000487538" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(!B * !C * D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(!B * !C * D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000929767, 0.00094006, 0.000944811, 0.000947051, 0.000947499", \
            "0.00119553, 0.00113839, 0.00106088, 0.00101253, 0.000974484", \
            "0.00163196, 0.00151436, 0.00131898, 0.00117848, 0.00105011", \
            "0.00250895, 0.00233247, 0.00197082, 0.0016405, 0.00128432" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000383706, 0.00038899, 0.000392586, 0.00039252, 0.000386695", \
            "0.000547434, 0.000508245, 0.000455527, 0.000423652, 0.000395233", \
            "0.000904341, 0.00080536, 0.000658435, 0.000546167, 0.000449359", \
            "0.00170465, 0.00151591, 0.00117555, 0.000901412, 0.000619373" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : gnd!;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000929767, 0.00094006, 0.000944811, 0.000947051, 0.000947499", \
            "0.00119553, 0.00113839, 0.00106088, 0.00101253, 0.000974484", \
            "0.00163196, 0.00151436, 0.00131898, 0.00117848, 0.00105011", \
            "0.00250895, 0.00233247, 0.00197082, 0.0016405, 0.00128432" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "8.03476e-05, 8.84296e-05, 9.32597e-05, 9.41581e-05, 9.18654e-05", \
            "0.000332562, 0.000261975, 0.000181425, 0.000140264, 0.000107661", \
            "0.000807834, 0.000647225, 0.000425204, 0.000284498, 0.000168605", \
            "0.0017769, 0.00152418, 0.00106154, 0.000702786, 0.000370214" \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000983741, 0.000985342, 0.000986673, 0.000987305, 0.000976834", \
            "0.00114623, 0.00110475, 0.00103742, 0.00101508, 0.000981754", \
            "0.00145468, 0.00137567, 0.00121361, 0.00112646, 0.00102324", \
            "0.00210856, 0.00197474, 0.0017133, 0.00145739, 0.00118032" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0001421, 0.000147336, 0.000149974, 0.000149134, 0.000142324", \
            "0.000228876, 0.000204478, 0.000185345, 0.000175933, 0.000163387", \
            "0.000502963, 0.000416036, 0.000304695, 0.000243953, 0.000191057", \
            "0.00113255, 0.000967456, 0.000679044, 0.000472313, 0.000295862" \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00120683, 0.00120759, 0.00120797, 0.00120823, 0.00119705", \
            "0.00127949, 0.00125532, 0.00122649, 0.00121303, 0.00119242", \
            "0.00155959, 0.00148355, 0.00137125, 0.00129573, 0.00122282", \
            "0.00219471, 0.00206174, 0.00180529, 0.00158282, 0.00135374" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000234758, 0.000235147, 0.000236335, 0.000234496, 0.000228702", \
            "0.000298257, 0.000277941, 0.000258035, 0.000246667, 0.000233482", \
            "0.000555568, 0.000483669, 0.000379343, 0.000314915, 0.000260149", \
            "0.00117583, 0.0010346, 0.000768621, 0.000553958, 0.000371606" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00140758, 0.00140813, 0.00140831, 0.00140837, 0.00139738", \
            "0.00143835, 0.00142636, 0.00141053, 0.0014065, 0.00138954", \
            "0.00169167, 0.00162727, 0.00153583, 0.00147359, 0.0014139", \
            "0.00236116, 0.00222247, 0.00196432, 0.00174546, 0.00153672" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000326744, 0.000326569, 0.000325814, 0.0003241, 0.000317415", \
            "0.00037393, 0.000353368, 0.000329985, 0.000316755, 0.000301543", \
            "0.000622816, 0.000552142, 0.000447552, 0.000382027, 0.000324862", \
            "0.00126664, 0.00111673, 0.000837844, 0.000620302, 0.000430152" \
          );
        }
      }
    }
    pin (A) {
      direction : input;
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_transition : 0.31;
      capacitance : 0.00105682;
      rise_capacitance : 0.00105682;
      rise_capacitance_range (0.000709538, 0.00105682);
      fall_capacitance : 0.00105673;
      fall_capacitance_range (0.00069667, 0.00105673);
      internal_power () {
        when : "(!B * !C * !D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!B * !C * !D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000200289, -0.000202727, -0.000206636, -0.000221904" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000284313, 0.000281455, 0.000281948, 0.000281592" \
          );
        }
      }
    }
    pin (B) {
      direction : input;
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_transition : 0.31;
      capacitance : 0.000987765;
      rise_capacitance : 0.000987765;
      rise_capacitance_range (0.000763726, 0.000987765);
      fall_capacitance : 0.00097313;
      fall_capacitance_range (0.000653268, 0.00097313);
      internal_power () {
        when : "(A * C * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * C * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-4.89931e-05, -4.85742e-05, -4.86435e-05, -4.85496e-05" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "6.36651e-05, 6.31366e-05, 6.27011e-05, 6.1449e-05" \
          );
        }
      }
      internal_power () {
        when : "(A * !C * D * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * !C * D * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-4.50861e-05, -4.47762e-05, -4.48755e-05, -4.47512e-05" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "7.70575e-05, 7.56096e-05, 7.35307e-05, 6.67885e-05" \
          );
        }
      }
      internal_power () {
        when : "(!A * C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000186726, -0.000197009, -0.000198291, -0.000198969" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000209976, 0.000209623, 0.000209981, 0.000209675" \
          );
        }
      }
      internal_power () {
        when : "(!A * !C * D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * !C * D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000172424, -0.000190225, -0.000193499, -0.000195242" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.00020826, 0.000208173, 0.000208378, 0.000208077" \
          );
        }
      }
      internal_power () {
        when : "(!A * !C * !D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * !C * !D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000203127, -0.000203505, -0.000203638, -0.00020375" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000232636, 0.000216309, 0.00021493, 0.000212898" \
          );
        }
      }
    }
    pin (C) {
      direction : input;
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_transition : 0.31;
      capacitance : 0.00107686;
      rise_capacitance : 0.00107604;
      rise_capacitance_range (0.000840559, 0.00107604);
      fall_capacitance : 0.00107686;
      fall_capacitance_range (0.000750584, 0.00107686);
      internal_power () {
        when : "(A * B * D * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * B * D * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000135754, -0.00013712, -0.000138396, -0.000139943" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000147552, 0.000146647, 0.000147039, 0.000146729" \
          );
        }
      }
      internal_power () {
        when : "(A * B * !D * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * B * !D * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.00017024, -0.000223272, -0.000227664, -0.000231424" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000272848, 0.000272824, 0.000271697, 0.000270548" \
          );
        }
      }
      internal_power () {
        when : "(A * !B * D * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * !B * D * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-7.40953e-05, -7.37433e-05, -7.51746e-05, -7.86247e-05" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000117079, 0.000116413, 0.000116664, 0.000116395" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000152687, -0.00015175, -0.000152087, -0.000151657" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000152687, 0.00015175, 0.000152087, 0.000151657" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * !D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * !D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000240817, -0.000242916, -0.000243523, -0.000243682" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000257302, 0.000257671, 0.000257632, 0.000257202" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.00023944, -0.000240278, -0.0002417, -0.000242285" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.00025688, 0.000256642, 0.000256908, 0.000256618" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * !D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * !D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000250032, -0.000250595, -0.00025064, -0.000250646" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000279668, 0.00026335, 0.000261923, 0.000259813" \
          );
        }
      }
    }
    pin (D) {
      direction : input;
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_transition : 0.31;
      capacitance : 0.00105536;
      rise_capacitance : 0.00104378;
      rise_capacitance_range (0.000868625, 0.00104378);
      fall_capacitance : 0.00105536;
      fall_capacitance_range (0.000852834, 0.00105536);
      internal_power () {
        when : "(A * B * C * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * B * C * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000247071, -0.000260671, -0.000261872, -0.000262451" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000285555, 0.000284585, 0.000284712, 0.000284173" \
          );
        }
      }
      internal_power () {
        when : "(A * B * !C * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * B * !C * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.00020848, -0.000246334, -0.000250518, -0.000253096" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000306634, 0.000305262, 0.000305517, 0.000304348" \
          );
        }
      }
      internal_power () {
        when : "(A * !B * C * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * !B * C * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000215667, -0.000254211, -0.000256893, -0.000258351" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000295709, 0.000295617, 0.000294489, 0.000293669" \
          );
        }
      }
      internal_power () {
        when : "(!A * C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000253209, -0.000263534, -0.000264691, -0.000265295" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000279982, 0.000278425, 0.000279253, 0.000278758" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * !C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * !C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000241054, -0.000257414, -0.000260063, -0.000261575" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000277848, 0.000277789, 0.000278366, 0.000277848" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * !C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * !C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000273533, -0.000272931, -0.000273207, -0.000273217" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000295474, 0.000284371, 0.000283654, 0.00028213" \
          );
        }
      }
    }
  }
  cell (inv) {
    area : 0;
    cell_leakage_power : 12.9273;
    pg_pin (gnd!) {
      pg_type : primary_ground;
      voltage_name : "gnd!";
    }
    pg_pin (vdd!) {
      pg_type : primary_power;
      voltage_name : "vdd!";
    }
    leakage_power () {
      value : 0;
      when : "(A * !Z)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 17.0551;
      when : "(A * !Z)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * Z)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 8.79954;
      when : "(!A * Z)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 12.9273;
      related_pg_pin : vdd!;
    }
    pin (Z) {
      direction : output;
      function : "!A";
      power_down_function : "(!vdd!) + (gnd!)";
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_capacitance : 0.08;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00811773, 0.015127, 0.0393155, 0.0910039, 0.280465", \
            "0.0205509, 0.0329222, 0.0630088, 0.113888, 0.302629", \
            "0.0265402, 0.0425343, 0.0815819, 0.139481, 0.32669", \
            "0.0341634, 0.054673, 0.104518, 0.179294, 0.373346" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00911634, 0.019828, 0.0573272, 0.137682, 0.432369", \
            "0.0251775, 0.0356741, 0.065337, 0.138361, 0.432369", \
            "0.0393487, 0.0521244, 0.0858509, 0.150039, 0.432373", \
            "0.0636041, 0.0792428, 0.119828, 0.186528, 0.43992" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00771542, 0.0141254, 0.0362573, 0.0835776, 0.25698", \
            "0.0166011, 0.0286268, 0.0574972, 0.104526, 0.277375", \
            "0.0186872, 0.034376, 0.072101, 0.127923, 0.29943", \
            "0.0190314, 0.0391314, 0.0878599, 0.160129, 0.342274" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00733213, 0.0161534, 0.047028, 0.113193, 0.355684", \
            "0.023403, 0.0320946, 0.0558243, 0.114344, 0.35568", \
            "0.0380741, 0.0489507, 0.0769206, 0.127376, 0.355681", \
            "0.063186, 0.077133, 0.111214, 0.166245, 0.36589" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000486004, 0.000497387, 0.000502301, 0.000503878, 0.000502891", \
            "0.000812781, 0.000732843, 0.000638011, 0.000578868, 0.000529766", \
            "0.00131586, 0.0011673, 0.000946146, 0.000773713, 0.000616726", \
            "0.00230826, 0.00208641, 0.00167242, 0.00131194, 0.000892781" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "3.20102e-06, 1.03263e-05, 1.5615e-05, 1.73238e-05, 1.62979e-05", \
            "0.000277375, 0.000195929, 0.000108867, 6.56952e-05, 3.32318e-05", \
            "0.00076649, 0.000594132, 0.000358448, 0.000212411, 9.47772e-05", \
            "0.00174824, 0.00148632, 0.00100159, 0.000634087, 0.000296414" \
          );
        }
      }
    }
    pin (A) {
      direction : input;
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_transition : 0.31;
      capacitance : 0.00103653;
      rise_capacitance : 0.00103653;
      rise_capacitance_range (0.000796862, 0.00103653);
      fall_capacitance : 0.001036;
      fall_capacitance_range (0.000758888, 0.001036);
    }
  }
}
