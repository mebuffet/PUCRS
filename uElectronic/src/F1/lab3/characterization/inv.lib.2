library (inv) {
  /* Models written by Liberate 15.1.0.503 from Cadence Design Systems, Inc. on Tue Nov 29 23:55:52 BRST 2016 */
  comment : "";
  date : "$Date: Tue Nov 29 23:55:36 2016 $";
  revision : "1.0";
  delay_model : table_lookup;
  capacitive_load_unit (1,pf);
  current_unit : "1mA";
  leakage_power_unit : "1nW";
  pulling_resistance_unit : "1kohm";
  time_unit : "1ns";
  voltage_unit : "1V";
  voltage_map (vdd!, 1);
  voltage_map (gnd!, 0);
  voltage_map (VDD, 1);
  voltage_map (VSS, 0);
  voltage_map (GND, 0);
  default_cell_leakage_power : 0;
  default_fanout_load : 1;
  default_max_transition : 3;
  default_output_pin_cap : 0;
  in_place_swap_mode : match_footprint;
  input_threshold_pct_fall : 50;
  input_threshold_pct_rise : 50;
  nom_process : 1;
  nom_temperature : 25;
  nom_voltage : 1;
  output_threshold_pct_fall : 50;
  output_threshold_pct_rise : 50;
  slew_derate_from_library : 1;
  slew_lower_threshold_pct_fall : 20;
  slew_lower_threshold_pct_rise : 20;
  slew_upper_threshold_pct_fall : 80;
  slew_upper_threshold_pct_rise : 80;
  operating_conditions (PVT_1V_25C) {
    process : 1;
    temperature : 25;
    voltage : 1;
  }
  default_operating_conditions : PVT_1V_25C;
  lu_table_template (constraint_4x5) {
    variable_1 : constrained_pin_transition;
    variable_2 : related_pin_transition;
    index_1 ("0.003, 0.08, 0.16, 0.31");
    index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
  }
  lu_table_template (delay_4x5) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.003, 0.08, 0.16, 0.31");
    index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
  }
  lu_table_template (mpw_constraint_4x5) {
    variable_1 : constrained_pin_transition;
    index_1 ("0.003, 0.08, 0.16, 0.31");
  }
  power_lut_template (passive_power_4x1) {
    variable_1 : input_transition_time;
    index_1 ("0.003, 0.08, 0.16, 0.31");
  }
  power_lut_template (power_4x5) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.003, 0.08, 0.16, 0.31");
    index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
  }
  cell (Complex_f2) {
    area : 0;
    cell_leakage_power : 16.8949;
    pg_pin (gnd!) {
      pg_type : primary_ground;
      voltage_name : "gnd!";
    }
    pg_pin (vdd!) {
      pg_type : primary_power;
      voltage_name : "vdd!";
    }
    leakage_power () {
      value : 0;
      when : "(A * B * C * D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 41.4389;
      when : "(A * B * C * D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * B * C * !D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 58.6955;
      when : "(A * B * C * !D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * B * !C * D * !S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 53.2125;
      when : "(A * B * !C * D * !S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * B * !C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 17.2925;
      when : "(A * B * !C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * !B * C * D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 11.4538;
      when : "(A * !B * C * D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * !B * C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 11.5109;
      when : "(A * !B * C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * !B * !C * D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 11.514;
      when : "(A * !B * !C * D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(A * !B * !C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 4.41945;
      when : "(A * !B * !C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * B * C * D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 12.8169;
      when : "(!A * B * C * D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * B * C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 12.8734;
      when : "(!A * B * C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * B * !C * D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 12.8764;
      when : "(!A * B * !C * D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * B * !C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 4.57023;
      when : "(!A * B * !C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * !B * C * D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 4.45485;
      when : "(!A * !B * C * D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * !B * C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 4.51381;
      when : "(!A * !B * C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * !B * !C * D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 4.51726;
      when : "(!A * !B * !C * D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * !B * !C * !D * S)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 4.15836;
      when : "(!A * !B * !C * !D * S)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 16.8949;
      related_pg_pin : vdd!;
    }
    pin (S) {
      direction : output;
      function : "(!A) + (!B) + (!C * !D)";
      power_down_function : "(!vdd!) + (gnd!)";
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_capacitance : 0.08;
      timing () {
        related_pin : "A";
        sdf_cond : "(B & C & D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(B * C * D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0104943, 0.0173893, 0.0413525, 0.0926096, 0.280467", \
            "0.0235491, 0.0353259, 0.0646016, 0.115185, 0.302458", \
            "0.0276887, 0.0433947, 0.0822924, 0.139892, 0.326097", \
            "0.0301091, 0.0506952, 0.101963, 0.177864, 0.371666" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0129877, 0.0236227, 0.0608511, 0.14059, 0.433109", \
            "0.0306842, 0.0398656, 0.0685559, 0.141255, 0.433109", \
            "0.0481307, 0.0593616, 0.0902915, 0.153022, 0.433109", \
            "0.0766424, 0.0914351, 0.128947, 0.191583, 0.441087" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0180767, 0.0302378, 0.0724858, 0.162894, 0.494065", \
            "0.033206, 0.0483146, 0.0908334, 0.180242, 0.510559", \
            "0.0425549, 0.0611703, 0.111765, 0.19963, 0.528907", \
            "0.0549175, 0.0781497, 0.140055, 0.241362, 0.565794" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0218073, 0.039271, 0.100403, 0.231447, 0.711545", \
            "0.0348685, 0.049583, 0.102713, 0.231352, 0.711545", \
            "0.0506718, 0.0667112, 0.117188, 0.233545, 0.71153", \
            "0.0782303, 0.0966963, 0.150922, 0.258002, 0.711532" \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "(B & C & ~D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(B * C * !D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0105003, 0.0173938, 0.0413453, 0.0925844, 0.280401", \
            "0.0231846, 0.0351369, 0.0644871, 0.115141, 0.30241", \
            "0.0264683, 0.0425154, 0.081962, 0.139768, 0.325981", \
            "0.0270839, 0.0482214, 0.100526, 0.177192, 0.37137" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0129864, 0.0236171, 0.0608461, 0.140592, 0.433097", \
            "0.0308981, 0.0400428, 0.06855, 0.141237, 0.433099", \
            "0.0486988, 0.0599002, 0.0907197, 0.153125, 0.433099", \
            "0.0778366, 0.0926646, 0.130131, 0.192171, 0.441111" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0204929, 0.0346672, 0.0838563, 0.189075, 0.574741", \
            "0.0362624, 0.0527619, 0.101278, 0.205502, 0.59065", \
            "0.0471069, 0.0670694, 0.122447, 0.22482, 0.607913", \
            "0.0621872, 0.0868341, 0.153572, 0.264866, 0.642695" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0259978, 0.0464074, 0.117721, 0.270553, 0.831061", \
            "0.0378573, 0.0549924, 0.119052, 0.270569, 0.831067", \
            "0.0533147, 0.0716787, 0.131244, 0.271994, 0.831067", \
            "0.0808873, 0.101244, 0.163418, 0.291496, 0.831055" \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "(B & ~C & D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(B * !C * D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0109739, 0.0180668, 0.0425533, 0.094284, 0.282194", \
            "0.0251671, 0.0367543, 0.0657774, 0.116826, 0.304201", \
            "0.0304018, 0.0455442, 0.0840597, 0.141437, 0.327768", \
            "0.0341162, 0.0534092, 0.10375, 0.179359, 0.373085" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0176197, 0.0282585, 0.065364, 0.145039, 0.43745", \
            "0.0372385, 0.0451545, 0.0729693, 0.145634, 0.437438", \
            "0.057315, 0.0665917, 0.0952639, 0.157491, 0.437436", \
            "0.0895879, 0.101748, 0.136196, 0.196426, 0.445442" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0261106, 0.0407033, 0.0908969, 0.197769, 0.589276", \
            "0.0433069, 0.0591015, 0.108134, 0.214116, 0.605144", \
            "0.0558426, 0.0748527, 0.129389, 0.233384, 0.622321", \
            "0.0732766, 0.0965627, 0.161854, 0.273052, 0.657018" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0329103, 0.0537011, 0.126395, 0.281806, 0.851463", \
            "0.0431882, 0.0605165, 0.127151, 0.281889, 0.851463", \
            "0.0583731, 0.0771724, 0.1383, 0.282923, 0.851451", \
            "0.0862048, 0.10661, 0.169931, 0.301052, 0.851445" \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0109739, 0.0180668, 0.0425533, 0.094284, 0.282194", \
            "0.0251671, 0.0367543, 0.0657774, 0.116826, 0.304201", \
            "0.0304018, 0.0455442, 0.0840597, 0.141437, 0.327768", \
            "0.0341162, 0.0534092, 0.10375, 0.179359, 0.373085" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0176197, 0.0282585, 0.065364, 0.145039, 0.43745", \
            "0.0372385, 0.0451545, 0.0729693, 0.145634, 0.437438", \
            "0.057315, 0.0665917, 0.0952639, 0.157491, 0.437436", \
            "0.0895879, 0.101748, 0.136196, 0.196426, 0.445442" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0261106, 0.0407033, 0.0908969, 0.197769, 0.589276", \
            "0.0433069, 0.0591015, 0.108134, 0.214116, 0.605144", \
            "0.0558426, 0.0748527, 0.129389, 0.233384, 0.622321", \
            "0.0732766, 0.0965627, 0.161854, 0.273052, 0.657018" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0329103, 0.0537011, 0.126395, 0.281806, 0.851463", \
            "0.0431882, 0.0605165, 0.127151, 0.281889, 0.851463", \
            "0.0583731, 0.0771724, 0.1383, 0.282923, 0.851451", \
            "0.0862048, 0.10661, 0.169931, 0.301052, 0.851445" \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "(A & C & D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(A * C * D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0117557, 0.0186358, 0.0424999, 0.0935082, 0.280414", \
            "0.0265589, 0.0374715, 0.0656662, 0.116004, 0.302216", \
            "0.0329349, 0.0471985, 0.0842398, 0.140842, 0.325751", \
            "0.0396844, 0.0580881, 0.105874, 0.179225, 0.371331" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0147984, 0.0254052, 0.0625126, 0.141964, 0.433203", \
            "0.0323195, 0.0412636, 0.0698866, 0.142597, 0.433204", \
            "0.0497464, 0.0608682, 0.0915456, 0.15439, 0.433204", \
            "0.079082, 0.093092, 0.130051, 0.192355, 0.441271" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0202757, 0.0324075, 0.0746528, 0.165032, 0.496198", \
            "0.0311524, 0.0455406, 0.0886939, 0.178708, 0.509786", \
            "0.038039, 0.055354, 0.103913, 0.194118, 0.524092", \
            "0.0462569, 0.0678799, 0.125576, 0.224231, 0.552274" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0218108, 0.0392709, 0.100428, 0.231447, 0.711561", \
            "0.0327426, 0.0472281, 0.102315, 0.231393, 0.71156", \
            "0.0476674, 0.0621684, 0.112976, 0.233924, 0.711552", \
            "0.073708, 0.0897456, 0.14063, 0.252116, 0.711636" \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "(A & C & ~D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(A * C * !D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0117958, 0.0186734, 0.0425298, 0.09352, 0.280382", \
            "0.0261457, 0.0372603, 0.0656548, 0.115923, 0.302199", \
            "0.0315289, 0.0461605, 0.0838268, 0.140547, 0.325638", \
            "0.0360586, 0.055008, 0.10414, 0.178536, 0.370978" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0147991, 0.0254059, 0.0625145, 0.141968, 0.433193", \
            "0.0324848, 0.0414673, 0.0699988, 0.142571, 0.433194", \
            "0.0505597, 0.0615467, 0.0918946, 0.154347, 0.433187", \
            "0.0805373, 0.0948858, 0.131538, 0.193235, 0.441313" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0234524, 0.0375922, 0.0867649, 0.192039, 0.577642", \
            "0.0349303, 0.0509193, 0.100257, 0.205235, 0.590922", \
            "0.0435398, 0.062315, 0.116231, 0.220459, 0.604527", \
            "0.0550172, 0.0781622, 0.140924, 0.251554, 0.633163" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0260009, 0.0464035, 0.117761, 0.2707, 0.831073", \
            "0.0361962, 0.0531936, 0.118631, 0.270569, 0.831072", \
            "0.0509933, 0.0678561, 0.127978, 0.27207, 0.831053", \
            "0.0773256, 0.0954304, 0.154536, 0.286443, 0.831054" \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "(A & ~C & D)";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "(A * !C * D)";
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0123479, 0.0194167, 0.0437871, 0.0952361, 0.282176", \
            "0.0280508, 0.0388586, 0.0669336, 0.117637, 0.303995", \
            "0.0351127, 0.049071, 0.0859007, 0.142243, 0.327439", \
            "0.0424061, 0.0598807, 0.107261, 0.180735, 0.372751" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.01945, 0.0300157, 0.0670082, 0.146382, 0.437497", \
            "0.0386082, 0.0464342, 0.074371, 0.146966, 0.437513", \
            "0.0589575, 0.0680395, 0.0963482, 0.158712, 0.437517", \
            "0.091595, 0.103641, 0.13745, 0.1973, 0.445622" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.029145, 0.0437024, 0.0938483, 0.200739, 0.59224", \
            "0.0417901, 0.0574538, 0.107438, 0.21399, 0.605321", \
            "0.0518826, 0.0699108, 0.123657, 0.22914, 0.619159", \
            "0.0656659, 0.0875465, 0.149315, 0.260458, 0.647151" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0329041, 0.0536997, 0.12637, 0.281757, 0.851453", \
            "0.0413876, 0.0590804, 0.127246, 0.281815, 0.851453", \
            "0.055567, 0.073167, 0.135611, 0.282963, 0.851442", \
            "0.0821278, 0.100383, 0.161079, 0.29673, 0.851438" \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0123479, 0.0194167, 0.0437871, 0.0952361, 0.282176", \
            "0.0280508, 0.0388586, 0.0669336, 0.117637, 0.303995", \
            "0.0351127, 0.049071, 0.0859007, 0.142243, 0.327439", \
            "0.0424061, 0.0598807, 0.107261, 0.180735, 0.372751" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.01945, 0.0300157, 0.0670082, 0.146382, 0.437497", \
            "0.0386082, 0.0464342, 0.074371, 0.146966, 0.437513", \
            "0.0589575, 0.0680395, 0.0963482, 0.158712, 0.437517", \
            "0.091595, 0.103641, 0.13745, 0.1973, 0.445622" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.029145, 0.0437024, 0.0938483, 0.200739, 0.59224", \
            "0.0417901, 0.0574538, 0.107438, 0.21399, 0.605321", \
            "0.0518826, 0.0699108, 0.123657, 0.22914, 0.619159", \
            "0.0656659, 0.0875465, 0.149315, 0.260458, 0.647151" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0329041, 0.0536997, 0.12637, 0.281757, 0.851453", \
            "0.0413876, 0.0590804, 0.127246, 0.281815, 0.851453", \
            "0.055567, 0.073167, 0.135611, 0.282963, 0.851442", \
            "0.0821278, 0.100383, 0.161079, 0.29673, 0.851438" \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0270086, 0.0409612, 0.0885511, 0.189589, 0.559168", \
            "0.0456126, 0.0607396, 0.107117, 0.207235, 0.57613", \
            "0.0597888, 0.0779433, 0.129873, 0.227997, 0.594949", \
            "0.0804899, 0.102526, 0.164588, 0.270553, 0.632627" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0365406, 0.0571794, 0.129452, 0.284161, 0.850309", \
            "0.048728, 0.0651348, 0.130691, 0.284095, 0.85031", \
            "0.0661834, 0.0842587, 0.14322, 0.285673, 0.85031", \
            "0.0963145, 0.116755, 0.178353, 0.306395, 0.850307" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0273759, 0.0415471, 0.0907373, 0.196008, 0.581569", \
            "0.0341058, 0.0498168, 0.099695, 0.204973, 0.590681", \
            "0.0360707, 0.05458, 0.108229, 0.213046, 0.597904", \
            "0.0349646, 0.0580765, 0.120449, 0.23042, 0.6128" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0260048, 0.0463883, 0.117759, 0.270699, 0.831064", \
            "0.033687, 0.051199, 0.118668, 0.270569, 0.831064", \
            "0.0488554, 0.0648389, 0.126004, 0.272006, 0.831064", \
            "0.0770828, 0.0936685, 0.1505, 0.283883, 0.83104" \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0298044, 0.0437471, 0.0913238, 0.192377, 0.561949", \
            "0.0437063, 0.0587829, 0.106125, 0.206848, 0.576203", \
            "0.0538427, 0.0710134, 0.122435, 0.222173, 0.590579", \
            "0.0682376, 0.088827, 0.147532, 0.25355, 0.618785" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0365099, 0.0571734, 0.129464, 0.284113, 0.850307", \
            "0.0454768, 0.0628787, 0.130498, 0.284047, 0.850306", \
            "0.0617777, 0.0787002, 0.139647, 0.285581, 0.850302", \
            "0.09058, 0.108531, 0.167703, 0.300749, 0.850254" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0323696, 0.0468713, 0.0969579, 0.203812, 0.59526", \
            "0.0403792, 0.0558918, 0.106165, 0.212983, 0.604238", \
            "0.0447132, 0.0622912, 0.115493, 0.221482, 0.611916", \
            "0.0489947, 0.0701561, 0.130164, 0.240078, 0.627705" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.0329127, 0.0536999, 0.12637, 0.281809, 0.851454", \
            "0.0395011, 0.0578097, 0.127145, 0.281819, 0.851454", \
            "0.0539485, 0.0707705, 0.133906, 0.283008, 0.85144", \
            "0.082502, 0.0992081, 0.157442, 0.294242, 0.851433" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * C * D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * C * D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00071007, 0.000714355, 0.000719634, 0.000721804, 0.000723655", \
            "0.000951315, 0.00089707, 0.000826754, 0.000784249, 0.00074935", \
            "0.00135671, 0.00124552, 0.00106877, 0.000936484, 0.0008173", \
            "0.002188, 0.00201083, 0.00166642, 0.00136003, 0.00103306" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000213412, 0.000217236, 0.000219658, 0.000218303, 0.000209226", \
            "0.000388221, 0.000342996, 0.000283645, 0.000249821, 0.000218735", \
            "0.000757634, 0.000643493, 0.000478383, 0.00036498, 0.000266524", \
            "0.00153878, 0.00133622, 0.000980919, 0.000704822, 0.000427139" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * C * !D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * C * !D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00071023, 0.00071465, 0.000720238, 0.000723365, 0.000728766", \
            "0.000938058, 0.000887725, 0.000822753, 0.000783645, 0.000756116", \
            "0.00131852, 0.00121579, 0.00105, 0.00092716, 0.000819996", \
            "0.00210702, 0.00194149, 0.00160928, 0.00132177, 0.00102033" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000252413, 0.000256263, 0.000257696, 0.000254741, 0.000239708", \
            "0.000413773, 0.000370152, 0.000314852, 0.000281223, 0.000247336", \
            "0.000751584, 0.000645833, 0.000492865, 0.000388088, 0.000289368", \
            "0.00148789, 0.00129284, 0.000967091, 0.000705558, 0.00043698" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * !C * D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "(B * !C * D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00090651, 0.000910787, 0.000916308, 0.000919276, 0.000923941", \
            "0.00113044, 0.00108211, 0.00101673, 0.000979276, 0.000951131", \
            "0.00149848, 0.00140218, 0.00123786, 0.00112107, 0.00101423", \
            "0.00226889, 0.00211375, 0.00179262, 0.001515, 0.00121111" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000387413, 0.00039054, 0.000391874, 0.00038938, 0.000376157", \
            "0.000525409, 0.000491412, 0.00044446, 0.00041489, 0.000383757", \
            "0.000831053, 0.000745831, 0.00061524, 0.000516345, 0.000424705", \
            "0.00152367, 0.00135907, 0.00106885, 0.000827554, 0.000570607" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : gnd!;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00090651, 0.000910787, 0.000916308, 0.000919276, 0.000923941", \
            "0.00113044, 0.00108211, 0.00101673, 0.000979276, 0.000951131", \
            "0.00149848, 0.00140218, 0.00123786, 0.00112107, 0.00101423", \
            "0.00226889, 0.00211375, 0.00179262, 0.001515, 0.00121111" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000213412, 0.000217236, 0.000219658, 0.000218303, 0.000209226", \
            "0.000388221, 0.000342996, 0.000283645, 0.000249821, 0.000218735", \
            "0.000757634, 0.000643493, 0.000478383, 0.00036498, 0.000266524", \
            "0.00153878, 0.00133622, 0.000980919, 0.000704822, 0.000427139" \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "(A * C * D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "(A * C * D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000890863, 0.000893021, 0.000894773, 0.000896214, 0.000897217", \
            "0.00114481, 0.00108945, 0.00101059, 0.000961904, 0.000920227", \
            "0.00157991, 0.00147324, 0.00128027, 0.00113242, 0.000995712", \
            "0.00245958, 0.00229994, 0.0019474, 0.00159458, 0.00123077" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000215922, 0.000218662, 0.000219941, 0.000218226, 0.000208966", \
            "0.000343919, 0.000302895, 0.000258979, 0.000236252, 0.000214635", \
            "0.000708604, 0.000592746, 0.00043457, 0.000335186, 0.000253421", \
            "0.00153213, 0.00131682, 0.000938789, 0.000661369, 0.000402223" \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "(A * C * !D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "(A * C * !D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000893736, 0.000896198, 0.00089854, 0.00090091, 0.000905022", \
            "0.00112875, 0.00107884, 0.00100677, 0.00096395, 0.000930147", \
            "0.00153713, 0.00143594, 0.00125931, 0.00112241, 0.00100058", \
            "0.00236222, 0.00220934, 0.00187721, 0.00155273, 0.0012177" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000254371, 0.000256962, 0.000257526, 0.000254209, 0.000238998", \
            "0.000365487, 0.000328755, 0.000290166, 0.000267445, 0.000242416", \
            "0.000699937, 0.000592361, 0.000448033, 0.000356166, 0.00027546", \
            "0.00146232, 0.00125818, 0.000909832, 0.000654874, 0.000413671" \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "(A * !C * D)";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "(A * !C * D)";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00109018, 0.0010928, 0.00109506, 0.00109666, 0.00110077", \
            "0.00132024, 0.00127496, 0.00120081, 0.00115983, 0.00112573", \
            "0.00171982, 0.00162398, 0.00144721, 0.00131498, 0.00119532", \
            "0.00253499, 0.00238584, 0.00206085, 0.00175021, 0.00141029" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000389132, 0.000391165, 0.000391709, 0.000388867, 0.000375447", \
            "0.00048066, 0.000453879, 0.00042084, 0.000401462, 0.000378789", \
            "0.000777955, 0.000694378, 0.000571326, 0.000487131, 0.000411033", \
            "0.00149407, 0.0013198, 0.00101544, 0.000776374, 0.000544734" \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : gnd!;
        rise_power (scalar) {
          values ( \
            "0" \
          );
        }
        fall_power (scalar) {
          values ( \
            "0" \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00109018, 0.0010928, 0.00109506, 0.00109666, 0.00110077", \
            "0.00132024, 0.00127496, 0.00120081, 0.00115983, 0.00112573", \
            "0.00171982, 0.00162398, 0.00144721, 0.00131498, 0.00119532", \
            "0.00253499, 0.00238584, 0.00206085, 0.00175021, 0.00141029" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000215922, 0.000218662, 0.000219941, 0.000218226, 0.000208966", \
            "0.000343919, 0.000302895, 0.000258979, 0.000236252, 0.000214635", \
            "0.000708604, 0.000592746, 0.00043457, 0.000335186, 0.000253421", \
            "0.00153213, 0.00131682, 0.000938789, 0.000661369, 0.000402223" \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00129706, 0.00129774, 0.00129884, 0.0013005, 0.00129714", \
            "0.00145176, 0.00141329, 0.00135955, 0.00133012, 0.00130082", \
            "0.00179199, 0.00170881, 0.00155718, 0.00145127, 0.00134926", \
            "0.00251212, 0.00237153, 0.00206978, 0.00179513, 0.00151337" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000236249, 0.000239961, 0.000241209, 0.000238106, 0.000222987", \
            "0.000269359, 0.000256553, 0.000249906, 0.000246129, 0.000232511", \
            "0.000534346, 0.00045572, 0.000359759, 0.000306798, 0.000255921", \
            "0.00121086, 0.0010408, 0.000745763, 0.000541236, 0.000361008" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00149317, 0.0014934, 0.00149409, 0.00149555, 0.00149119", \
            "0.00157633, 0.00155261, 0.0015245, 0.00150898, 0.00149009", \
            "0.00186754, 0.00179106, 0.00167698, 0.00159716, 0.00152254", \
            "0.00256027, 0.00242082, 0.00213628, 0.00189595, 0.00165697" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00034239, 0.000342233, 0.000340787, 0.000337133, 0.000323263", \
            "0.00036978, 0.000356484, 0.000342171, 0.000332072, 0.000313577", \
            "0.000611988, 0.000545503, 0.000452396, 0.000391056, 0.000337816", \
            "0.00126546, 0.00111858, 0.00084361, 0.000630518, 0.000441318" \
          );
        }
      }
    }
    pin (A) {
      direction : input;
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_transition : 0.31;
      capacitance : 0.00106733;
      rise_capacitance : 0.00106701;
      rise_capacitance_range (0.000797996, 0.00106701);
      fall_capacitance : 0.00106733;
      fall_capacitance_range (0.000782721, 0.00106733);
      internal_power () {
        when : "(B * !C * !D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(B * !C * !D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000165941, -0.000168544, -0.000173464, -0.000189245" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000213462, 0.0002134, 0.000214042, 0.000213754" \
          );
        }
      }
      internal_power () {
        when : "(!B * C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!B * C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000188746, -0.000189688, -0.000191392, -0.000196582" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.00021309, 0.000213084, 0.00021374, 0.000213397" \
          );
        }
      }
      internal_power () {
        when : "(!B * !C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!B * !C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000188564, -0.000189339, -0.00019111, -0.000196378" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000213678, 0.000213347, 0.00021398, 0.000213643" \
          );
        }
      }
    }
    pin (B) {
      direction : input;
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_transition : 0.31;
      capacitance : 0.00104988;
      rise_capacitance : 0.00104988;
      rise_capacitance_range (0.000861332, 0.00104988);
      fall_capacitance : 0.00104139;
      fall_capacitance_range (0.000824403, 0.00104139);
      internal_power () {
        when : "(A * !C * !D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * !C * !D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000169925, -0.000170447, -0.000171496, -0.000171968" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000214003, 0.000212856, 0.000212098, 0.000207509" \
          );
        }
      }
      internal_power () {
        when : "(!A * C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.00016939, -0.000168911, -0.000169845, -0.000170034" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000202476, 0.000183204, 0.000181111, 0.000178264" \
          );
        }
      }
      internal_power () {
        when : "(!A * !C * D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * !C * D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000169256, -0.000169377, -0.000169606, -0.000169802" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000204986, 0.000183632, 0.000181427, 0.000178558" \
          );
        }
      }
      internal_power () {
        when : "(!A * !C * !D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * !C * !D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000171852, -0.000171532, -0.000171688, -0.000171589" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.00018536, 0.00018089, 0.000180077, 0.000177099" \
          );
        }
      }
    }
    pin (C) {
      direction : input;
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_transition : 0.31;
      capacitance : 0.00109101;
      rise_capacitance : 0.00109101;
      rise_capacitance_range (0.000877094, 0.00109101);
      fall_capacitance : 0.00108225;
      fall_capacitance_range (0.000782137, 0.00108225);
      internal_power () {
        when : "(A * B * D * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * B * D * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-4.23519e-05, -4.19018e-05, -4.20143e-05, -4.17235e-05" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "8.60502e-05, 8.40037e-05, 8.27867e-05, 7.7953e-05" \
          );
        }
      }
      internal_power () {
        when : "(A * !B * D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * !B * D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000216685, -0.000219236, -0.00022027, -0.000220739" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000233605, 0.000233895, 0.000234356, 0.000234085" \
          );
        }
      }
      internal_power () {
        when : "(A * !B * !D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * !B * !D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000229791, -0.000230444, -0.000230422, -0.000230264" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000240563, 0.000236673, 0.000236459, 0.000235846" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000216516, -0.000219062, -0.000220108, -0.000220584" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000233728, 0.000233967, 0.000234543, 0.000234278" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * !D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * !D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000227971, -0.000228913, -0.000229052, -0.000229089" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000243823, 0.000237767, 0.000237293, 0.000236351" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000217088, -0.000221805, -0.000222633, -0.000223007" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000231417, 0.000231853, 0.000232352, 0.000232048" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * !D * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * !D * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.00023041, -0.000231045, -0.000231039, -0.000230814" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000233229, 0.000234109, 0.000234146, 0.000233715" \
          );
        }
      }
    }
    pin (D) {
      direction : input;
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_transition : 0.31;
      capacitance : 0.00106961;
      rise_capacitance : 0.00106104;
      rise_capacitance_range (0.000887471, 0.00106104);
      fall_capacitance : 0.00106961;
      fall_capacitance_range (0.000865471, 0.00106961);
      internal_power () {
        when : "(A * B * C * !S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * B * C * !S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000153386, -0.000197595, -0.00020126, -0.000204509" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.00025818, 0.000259183, 0.000257886, 0.000256755" \
          );
        }
      }
      internal_power () {
        when : "(A * !B * !C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(A * !B * !C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000229826, -0.000230106, -0.000230169, -0.000230042" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.00024064, 0.000236552, 0.00023646, 0.000235813" \
          );
        }
      }
      internal_power () {
        when : "(!B * C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!B * C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.00021523, -0.000219597, -0.000220358, -0.000220648" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000233897, 0.000234209, 0.000234644, 0.000234213" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000215138, -0.000219433, -0.000220196, -0.000220487" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000233994, 0.00023418, 0.000234828, 0.000234398" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * !C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * B * !C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000228114, -0.000228479, -0.000228804, -0.000228876" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000242688, 0.000237641, 0.000237316, 0.000236336" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * !C * S)";
        related_pg_pin : gnd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        when : "(!A * !B * !C * S)";
        related_pg_pin : vdd!;
        rise_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "-0.000230459, -0.000230599, -0.000230772, -0.000230591" \
          );
        }
        fall_power (passive_power_4x1) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          values ( \
            "0.000233201, 0.000233944, 0.000234097, 0.00023363" \
          );
        }
      }
    }
  }
  cell (inv) {
    area : 0;
    cell_leakage_power : 12.9273;
    pg_pin (gnd!) {
      pg_type : primary_ground;
      voltage_name : "gnd!";
    }
    pg_pin (vdd!) {
      pg_type : primary_power;
      voltage_name : "vdd!";
    }
    leakage_power () {
      value : 0;
      when : "(A * !Z)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 17.0551;
      when : "(A * !Z)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      when : "(!A * Z)";
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 8.79954;
      when : "(!A * Z)";
      related_pg_pin : vdd!;
    }
    leakage_power () {
      value : 0;
      related_pg_pin : gnd!;
    }
    leakage_power () {
      value : 12.9273;
      related_pg_pin : vdd!;
    }
    pin (Z) {
      direction : output;
      function : "!A";
      power_down_function : "(!vdd!) + (gnd!)";
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_capacitance : 0.08;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00811773, 0.015127, 0.0393155, 0.0910039, 0.280465", \
            "0.0205509, 0.0329222, 0.0630088, 0.113888, 0.302629", \
            "0.0265402, 0.0425343, 0.0815819, 0.139481, 0.32669", \
            "0.0341634, 0.054673, 0.104518, 0.179294, 0.373346" \
          );
        }
        rise_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00911634, 0.019828, 0.0573272, 0.137682, 0.432369", \
            "0.0251775, 0.0356741, 0.065337, 0.138361, 0.432369", \
            "0.0393487, 0.0521244, 0.0858509, 0.150039, 0.432373", \
            "0.0636041, 0.0792428, 0.119828, 0.186528, 0.43992" \
          );
        }
        cell_fall (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00771542, 0.0141254, 0.0362573, 0.0835776, 0.25698", \
            "0.0166011, 0.0286268, 0.0574972, 0.104526, 0.277375", \
            "0.0186872, 0.034376, 0.072101, 0.127923, 0.29943", \
            "0.0190314, 0.0391314, 0.0878599, 0.160129, 0.342274" \
          );
        }
        fall_transition (delay_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.00733213, 0.0161534, 0.047028, 0.113193, 0.355684", \
            "0.023403, 0.0320946, 0.0558243, 0.114344, 0.35568", \
            "0.0380741, 0.0489507, 0.0769206, 0.127376, 0.355681", \
            "0.063186, 0.077133, 0.111214, 0.166245, 0.36589" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : gnd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0" \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : vdd!;
        rise_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "0.000486004, 0.000497387, 0.000502301, 0.000503878, 0.000502891", \
            "0.000812781, 0.000732843, 0.000638011, 0.000578868, 0.000529766", \
            "0.00131586, 0.0011673, 0.000946146, 0.000773713, 0.000616726", \
            "0.00230826, 0.00208641, 0.00167242, 0.00131194, 0.000892781" \
          );
        }
        fall_power (power_4x5) {
          index_1 ("0.003, 0.08, 0.16, 0.31");
          index_2 ("0.001, 0.003, 0.01, 0.025, 0.08");
          values ( \
            "3.20102e-06, 1.03263e-05, 1.5615e-05, 1.73238e-05, 1.62979e-05", \
            "0.000277375, 0.000195929, 0.000108867, 6.56952e-05, 3.32318e-05", \
            "0.00076649, 0.000594132, 0.000358448, 0.000212411, 9.47772e-05", \
            "0.00174824, 0.00148632, 0.00100159, 0.000634087, 0.000296414" \
          );
        }
      }
    }
    pin (A) {
      direction : input;
      related_ground_pin : gnd!;
      related_power_pin : vdd!;
      max_transition : 0.31;
      capacitance : 0.00103653;
      rise_capacitance : 0.00103653;
      rise_capacitance_range (0.000796862, 0.00103653);
      fall_capacitance : 0.001036;
      fall_capacitance_range (0.000758888, 0.001036);
    }
  }
}
